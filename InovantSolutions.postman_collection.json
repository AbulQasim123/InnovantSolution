{
	"info": {
		"_postman_id": "49315f07-8a76-44bb-8e4c-5bb6db378d36",
		"name": "InovantSolutions",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24710956",
		"_collection_link": "https://blue-star-854291.postman.co/workspace/Team-Workspace~468866da-22e2-4eae-8c42-ea8176e5de06/collection/24710956-49315f07-8a76-44bb-8e4c-5bb6db378d36?action=share&source=collection_link&creator=24710956"
	},
	"item": [
		{
			"name": "register-customer",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"irfan\",\r\n    \"email\": \"irfan@gmail.com\",\r\n    \"mobile\": 8596858574,\r\n    \"address\": \"Kanpur\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{server_url}}/register-customer",
					"host": [
						"{{server_url}}"
					],
					"path": [
						"register-customer"
					]
				},
				"description": "## Register Customer API\n\nThis endpoint allows users to register a new customer. It requires the customer's name, email, mobile number, and address to successfully process the request.\n\n### Request\n\n**Method:** POST  \n**Endpoint:** `{{server_url}}/register-custome`\n\n#### Request Body (JSON)\n\n- `name` (string, required): The full name of the customer.\n    \n- `email` (string, required): The email address of the customer.\n    \n- `mobile` (integer, required): The mobile number of the customer.\n    \n- `address` (string, required): The residential address of the customer.\n    \n\n**Example Request Body:**\n\n``` json\n{\n  \"name\": \"John Doe\",\n  \"email\": \"john.doe@example.com\",\n  \"mobile\": 1234567890,\n  \"address\": \"123 Main St, Anytown\"\n}\n\n ```\n\n### Response\n\n**Status Code:** 201 Created  \n**Content-Type:** application/json\n\n#### Response Body\n\n- `status` (boolean): Indicates whether the registration operation was successful.\n    \n- `message` (string): A message providing additional information about the operation (may be empty).\n    \n- `data` (object): Contains details about the registered customer:\n    \n    - `name` (string): The name of the registered customer.\n        \n    - `email` (string): The email of the registered customer.\n        \n    - `mobile` (integer): The mobile number of the registered customer.\n        \n    - `address` (string): The address of the registered customer.\n        \n    - `updated_at` (string): Timestamp of when the customer information was last updated.\n        \n    - `created_at` (string): Timestamp of when the customer was registered.\n        \n    - `id` (integer): The unique identifier of the registered customer.\n        \n\n**Example Response:**\n\n``` json\n{\n    \"status\": true,\n    \"message\": \"Customer added successfully.\",\n    \"data\": {\n        \"id\": 10,\n        \"name\": \"irfan\",\n        \"email\": \"irfan@gmail.com\",\n        \"mobile\": 8596858574,\n        \"address\": \"Kanpur\",\n        \"status\": null,\n        \"created_at\": \"Jul 29, 2025\"\n    }\n}\n\n ```\n\n### Notes\n\n- Ensure that the `email` provided is valid and not already in use.\n    \n- The `mobile` number should be a valid format and not already associated with another account.\n    \n- The response will confirm the successful registration of the customer and provide the details of the registered account."
			},
			"response": []
		},
		{
			"name": "send-otp",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{server_url}}/send-otp?mobile_no=8596858574",
					"host": [
						"{{server_url}}"
					],
					"path": [
						"send-otp"
					],
					"query": [
						{
							"key": "mobile_no",
							"value": "8596858574"
						}
					]
				},
				"description": "## Send OTP API\n\nThis endpoint allows users to request a One-Time Password (OTP) for mobile verification. It requires the user's mobile number to successfully process the request.\n\n### Request\n\n**Method:** POST  \n**Endpoint:** `{{server_url}}/send-otp?mobile_no={mobile_no}`\n\n#### Request Parameters\n\n- `mobile_no` (string, required): The mobile number to which the OTP will be sent.\n    \n\n### Response\n\n**Status Code:** 200 OK  \n**Content-Type:** application/json\n\n#### Response Body\n\n- `status` (boolean): Indicates whether the OTP request was successful.\n    \n- `message` (string): A message providing additional information about the operation (may be empty).\n    \n- `otp` (integer): The One-Time Password generated for the user (value may be masked).\n    \n\n**Example Response:**\n\n``` json\n{\n    \"status\": true,\n    \"message\": \"Weâ€™ve sent an OTP to your mobile number.\",\n    \"otp\": 5932\n}\n\n ```\n\n### Notes\n\n- Ensure that the `mobile_no` provided is valid and in the correct format.\n    \n- The response will confirm whether the OTP request was successful."
			},
			"response": []
		},
		{
			"name": "login",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{server_url}}/login?mobile_no=8596858574&otp=2825&fcm_token=fcm_token",
					"host": [
						"{{server_url}}"
					],
					"path": [
						"login"
					],
					"query": [
						{
							"key": "mobile_no",
							"value": "8596858574"
						},
						{
							"key": "otp",
							"value": "2825"
						},
						{
							"key": "fcm_token",
							"value": "fcm_token"
						}
					]
				},
				"description": "## Login API\n\nThis endpoint allows users to authenticate themselves using their mobile number and a one-time password (OTP). Upon successful authentication, the server returns a token that can be used for subsequent requests that require user authentication.\n\n### Request\n\n**Method:** POST  \n**Endpoint:** `{{server_url}}/login`\n\n#### Request Parameters\n\n- `mobile_no` (string, required): The mobile number of the user attempting to log in.\n    \n- `otp` (string, required): The one-time password sent to the user's mobile number for authentication.\n    \n- `fcm_token` (string, required): The Firebase Cloud Messaging token used for push notifications.\n    \n\n**Example Request URL:**\n\n```\n{{server_url}}/login?mobile_no=8596858574&otp=9560&fcm_token=fcm_token\n\n ```\n\n### Response\n\n**Status Code:** 200 OK  \n**Content-Type:** application/json\n\n#### Response Body\n\n- `status` (boolean): Indicates whether the login operation was successful.\n    \n- `message` (string): A message providing additional information about the operation (may be empty).\n    \n- `token_type` (string): The type of token returned for authentication (e.g., Bearer).\n    \n- `token` (string): The authentication token that must be included in subsequent requests.\n    \n- `data` (object): Contains user-related information:\n    \n    - `id` (integer): The unique identifier of the user.\n        \n    - `name` (string): The name of the user.\n        \n    - `email` (string): The email address of the user.\n        \n    - `mobile` (string): The mobile number of the user.\n        \n    - `address` (string): The address of the user.\n        \n    - `status` (integer): The status of the user account (e.g., active, inactive).\n        \n    - `created_at` (string): Timestamp of when the user account was created.\n        \n\n**Example Response:**\n\n``` json\n{\n    \"status\": true,\n    \"message\": \"Login successful\",\n    \"token_type\": \"Bearer\",\n    \"token\": \"4|vPeMNTsVzP18vxVhC8PYx2Uwn1PZ9iKnQsaJ20tmd11bd229\",\n    \"data\": {\n        \"id\": 10,\n        \"name\": \"irfan\",\n        \"email\": \"irfan@gmail.com\",\n        \"mobile\": \"8596858574\",\n        \"address\": \"Kanpur\",\n        \"status\": 1,\n        \"created_at\": \"Jul 29, 2025\"\n    }\n}\n\n ```\n\n### Notes\n\n- Ensure that the `mobile_no` and `otp` are correctly entered to avoid authentication failures.\n    \n- The `fcm_token` is necessary for enabling push notifications for the user.\n    \n- Upon successful login, the returned token should be stored securely and included in the headers of subsequent requests that require authentication."
			},
			"response": []
		},
		{
			"name": "profile",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{server_url}}/profile",
					"host": [
						"{{server_url}}"
					],
					"path": [
						"profile"
					]
				},
				"description": "## Profile API\n\nThis endpoint allows users to retrieve their profile information. It requires authentication to access the user's profile details.\n\n### Request\n\n**Method:** GET  \n**Endpoint:** `{{server_url}}/profile`\n\n### Response\n\n**Status Code:** 401 Unauthorized  \n**Content-Type:** application/json\n\n**Example Response:**\n\n``` json\n{\n    \"status\": true,\n    \"message\": \"Login successful\",\n    \"token_type\": \"Bearer\",\n    \"token\": \"4|vPeMNTsVzP18vxVhC8PYx2Uwn1PZ9iKnQsaJ20tmd11bd229\",\n    \"data\": {\n        \"id\": 10,\n        \"name\": \"irfan\",\n        \"email\": \"irfan@gmail.com\",\n        \"mobile\": \"8596858574\",\n        \"address\": \"Kanpur\",\n        \"status\": 1,\n        \"created_at\": \"Jul 29, 2025\"\n    }\n}\n\n ```\n\n### Notes\n\n- Ensure that you are authenticated before making this request.\n    \n- A 401 status indicates that the request lacks valid authentication credentials."
			},
			"response": []
		},
		{
			"name": "update-profile",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"irfan\",\r\n    \"email\": \"irfan@gmail.com\",\r\n    \"mobile\": 8596858574,\r\n    \"address\": \"Vashi\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{server_url}}/update-profile",
					"host": [
						"{{server_url}}"
					],
					"path": [
						"update-profile"
					]
				},
				"description": "## Update Profile API\n\nThis endpoint allows users to update their profile information. It requires the user's name, email, mobile number, and address to successfully process the request.\n\n### Request\n\n**Method:** POST  \n**Endpoint:** `{{server_url}}/update-profile`\n\n#### Request Body (JSON)\n\n- `name` (string, required): The name of the user.\n    \n- `email` (string, required): The email address of the user.\n    \n- `mobile` (integer, required): The mobile number of the user.\n    \n- `address` (string, required): The address of the user.\n    \n\n**Example Request Body:**\n\n``` json\n{\n  \"name\": \"John Doe\",\n  \"email\": \"john.doe@example.com\",\n  \"mobile\": 1234567890,\n  \"address\": \"123 Main St\"\n}\n\n ```\n\n### Response\n\n**Status Code:** 200 OK  \n**Content-Type:** application/json\n\n#### Response Body\n\n- `status` (boolean): Indicates whether the operation was successful.\n    \n- `message` (string): A message providing additional information about the operation (may be empty).\n    \n- `data` (object): Contains details about the updated profile:\n    \n    - `id` (integer): The unique identifier of the user.\n        \n    - `name` (string): The updated name of the user.\n        \n    - `email` (string): The updated email address of the user.\n        \n    - `mobile` (integer): The updated mobile number of the user.\n        \n    - `address` (string): The updated address of the user.\n        \n    - `status` (integer): The status of the profile update.\n        \n    - `created_at` (string): Timestamp of when the profile was created.\n        \n\n**Example Response:**\n\n``` json\n{\n    \"status\": true,\n    \"message\": \"Profile updated successfully.\",\n    \"data\": {\n        \"id\": 10,\n        \"name\": \"irfan\",\n        \"email\": \"irfan@gmail.com\",\n        \"mobile\": 8596858574,\n        \"address\": \"Vashi\",\n        \"status\": 1,\n        \"created_at\": \"Jul 29, 2025\"\n    }\n}\n\n ```\n\n### Notes\n\n- Ensure that all fields in the request body are provided and are valid.\n    \n- The response will confirm the successful update of the user's profile."
			},
			"response": []
		},
		{
			"name": "logout",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{server_url}}/logout",
					"host": [
						"{{server_url}}"
					],
					"path": [
						"logout"
					]
				},
				"description": "## Logout API\n\nThis endpoint allows users to log out of their session. It is typically used to terminate the user's current session and ensure that their account is secure.\n\n### Request\n\n**Method:** POST  \n**Endpoint:** `{{server_url}}/logout`\n\n#### Request Body\n\nThis request does not require a body.\n\n### Response\n\n**Status Code:** 401 Unauthorized  \n**Content-Type:** application/json\n\n**Example Request Body:**\n\n``` json\n{\n    \"status\": true,\n    \"message\": \"Logged out successfully\"\n}\n\n ```\n\n### Notes\n\n- A 401 status indicates that the user is not authorized to perform the logout action, possibly due to an invalid or expired session.\n    \n- Ensure that the user is authenticated before attempting to log out."
			},
			"response": []
		},
		{
			"name": "delete-account",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{server_url}}/delete-account",
					"host": [
						"{{server_url}}"
					],
					"path": [
						"delete-account"
					]
				},
				"description": "## Delete Account API\n\nThis endpoint allows users to delete their account from the system. It requires the user's unique identifier to successfully process the request.\n\n### Request\n\n**Method:** DELETE  \n**Endpoint:** `{{server_url}}/delete-account`\n\n### Response\n\n**Status Code:** 200 OK  \n**Content-Type:** application/json\n\n#### Response Body\n\n- `status` (boolean): Indicates whether the operation was successful.\n    \n- `message` (string): A message providing additional information about the operation (may be empty).\n    \n\n**Example Response:**\n\n``` json\n{\n  \"status\": true,\n  \"message\": \"Account deleted successfully.\"\n}\n\n ```\n\n### Notes\n\n- The response will confirm the successful deletion of the account."
			},
			"response": []
		},
		{
			"name": "get-product",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{server_url}}/get-product?product_id=7",
					"host": [
						"{{server_url}}"
					],
					"path": [
						"get-product"
					],
					"query": [
						{
							"key": "product_id",
							"value": "7"
						}
					]
				},
				"description": "## Get Product API\n\nThis endpoint allows users to retrieve details about a specific product using its unique identifier. It requires the product ID to successfully process the request.\n\n### Request\n\n**Method:** GET  \n**Endpoint:** `{{server_url}}/get-product`\n\n#### Request Parameters\n\n- `product_id` (integer, required): The unique identifier of the product whose details are to be fetched.\n    \n\n### Response\n\n**Status Code:** 200 OK  \n**Content-Type:** application/json\n\n#### Response Body\n\n- `status` (boolean): Indicates whether the operation was successful.\n    \n- `message` (string): A message providing additional information about the operation (may be empty).\n    \n- `data` (object): Contains details about the requested product:\n    \n    - `product_id` (integer): The ID of the product retrieved.\n        \n    - `name` (string): The name of the product.\n        \n    - `description` (string): A brief description of the product.\n        \n    - `price` (float): The price of the product.\n        \n    - `stock` (integer): The available stock quantity of the product.\n        \n    - `created_at` (string): Timestamp of when the product was created.\n        \n    - `updated_at` (string): Timestamp of when the product details were last updated.\n        \n\n**Example Response:**\n\n``` json\n{\n    \"status\": true,\n    \"message\": \"Products fetched successfully.\",\n    \"data\": [\n        {\n            \"id\": 6,\n            \"name\": \"Mobile\",\n            \"slug\": \"mobile\",\n            \"price\": \"45000.00\",\n            \"description\": \"The iPhone is a line of smartphones designed and marketed by Apple Inc. that runs on Apple's iOS operating system\",\n            \"status\": 1,\n            \"images\": [\n                {\n                    \"id\": 11,\n                    \"product_id\": 6,\n                    \"images\": \"http://127.0.0.1:8000/storage/uploads/products_images/1753389333_662945_mobile.jpg\"\n                }\n            ]\n        },\n        {\n            \"id\": 7,\n            \"name\": \"Monitor\",\n            \"slug\": \"monitor\",\n            \"price\": \"5600.00\",\n            \"description\": \"A monitor is an electronic visual display, often part of a computer system, that presents text, images, and video\",\n            \"status\": 1,\n            \"images\": [\n                {\n                    \"id\": 12,\n                    \"product_id\": 7,\n                    \"images\": \"http://127.0.0.1:8000/storage/uploads/products_images/1753389399_509142_monitor.webp\"\n                }\n            ]\n        }\n    ]\n}\n\n ```\n\n### Notes\n\n- Ensure that the `product_id` corresponds to a valid entry in the system.\n    \n- The response will provide the details of the requested product."
			},
			"response": []
		},
		{
			"name": "add-to-cart",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"product_id\": 7,\r\n    \"quantity\": 1 // send 1 qunatity from client side, we can hardcode bydefault 1\r\n} ",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{server_url}}/add-to-cart",
					"host": [
						"{{server_url}}"
					],
					"path": [
						"add-to-cart"
					]
				},
				"description": "## Add to Cart API\n\nThis endpoint allows users to add a specified product to their shopping cart. It requires the product ID and the quantity of the product to be added.\n\n### Request\n\n**Method:** POST  \n**Endpoint:** `{{server_url}}/add-to-cart`\n\n#### Request Body (JSON)\n\n- `product_id` (integer, required): The unique identifier of the product to be added to the cart.\n    \n- `quantity` (integer, required): The number of units of the product to be added.\n    \n\n**Example Request Body:**\n\n``` json\n{\n  \"product_id\": 7,\n  \"quantity\": 1\n}\n\n ```\n\n### Response\n\n**Status Code:** 401 Unauthorized  \n**Content-Type:** application/json\n\n#### Response Body\n\n- `message` (string): A message providing additional information about the operation (may be empty).\n    \n\n**Example Response:**\n\n``` json\n{\n    \"status\": true,\n    \"message\": \"Product added to cart successfully.\",\n    \"data\": {\n        \"customer_id\": 10,\n        \"product_id\": 7,\n        \"quantity\": 1,\n        \"updated_at\": \"2025-07-29T21:13:32.000000Z\",\n        \"created_at\": \"2025-07-29T21:13:32.000000Z\",\n        \"id\": 10\n    }\n}\n\n ```\n\n### Notes\n\n- Ensure that the `product_id` corresponds to a valid product in the system.\n    \n- The `quantity` must be a positive integer.\n    \n- A 401 status code indicates that the request was not authorized, and further authentication may be required."
			},
			"response": []
		},
		{
			"name": "get-cart",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{server_url}}/get-cart",
					"host": [
						"{{server_url}}"
					],
					"path": [
						"get-cart"
					]
				},
				"description": "### Get Cart\n\nThis endpoint retrieves the shopping cart details for a specified customer.\n\n#### Request\n\n- **Method:** GET\n    \n- **Endpoint:** `{{server_url}}/get-cart`\n    \n- **Query Parameters:**\n    \n    - `customer_id` (required): The unique identifier for the customer whose cart is being requested.\n        \n\n#### Response\n\nOn a successful request, the server responds with a JSON object containing the following fields:\n\n- **status** (boolean): Indicates if the request was successful.\n    \n- **total** (integer): The total number of items in the cart.\n    \n- **data** (array): An array of cart items, where each item contains:\n    \n    - **id** (integer): The unique identifier for the cart item.\n        \n    - **customer_id** (integer): The unique identifier for the customer.\n        \n    - **product_id** (integer): The unique identifier for the product.\n        \n    - **quantity** (integer): The quantity of the product in the cart.\n        \n    - **product** (object): An object containing details about the product, including:\n        \n        - **id** (integer): The unique identifier for the product.\n            \n        - **name** (string): The name of the product.\n            \n        - **slug** (string): A URL-friendly version of the product name.\n            \n        - **price** (string): The price of the product.\n            \n        - **description** (string): A brief description of the product.\n            \n        - **status** (integer): The status of the product (e.g., available, out of stock).\n            \n        - **images** (array): An array of image objects related to the product, where each image object contains:\n            \n            - **id** (integer): The unique identifier for the image.\n                \n            - **product_id** (integer): The identifier for the associated product.\n                \n            - **images** (string): The URL or path to the image.\n                \n\n#### Example Response\n\n``` json\n{\n    \"status\": true,\n    \"total\": 5600,\n    \"data\": [\n        {\n            \"cartId\": 10,\n            \"customerId\": 10,\n            \"productId\": 7,\n            \"quantity\": 1,\n            \"product\": {\n                \"productId\": 7,\n                \"name\": \"Monitor\",\n                \"slug\": \"monitor\",\n                \"price\": \"5600.00\",\n                \"description\": \"A monitor is an electronic visual display, often part of a computer system, that presents text, images, and video\",\n                \"status\": 1,\n                \"images\": [\n                    {\n                        \"imageId\": 12,\n                        \"productId\": 7,\n                        \"images\": \"http://127.0.0.1:8000/storage/uploads/products_images/1753389399_509142_monitor.webp\"\n                    }\n                ]\n            }\n        }\n    ]\n}\n\n ```\n\nThis response structure allows clients to easily access the cart details and product information for further processing or display."
			},
			"response": []
		},
		{
			"name": "update-cart",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"cart_id\": 10,\r\n    \"action\": \"plus\", // minus\r\n    \"quantity\": 1\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{server_url}}/update-cart",
					"host": [
						"{{server_url}}"
					],
					"path": [
						"update-cart"
					]
				},
				"description": "### Update Cart Endpoint\n\nThis endpoint allows users to update the quantity of a specific item in their shopping cart.\n\n#### Request\n\n- **Method**: POST\n    \n- **URL**: `{{server_url}}/update-cart`\n    \n- **Request Body** (JSON):\n    \n    - `cart_id` (integer): The unique identifier of the cart to be updated.\n        \n    - `action` (string): The action to perform on the cart item. In this case, it indicates whether to increase or decrease the quantity (e.g., \"plus\" for adding).\n        \n    - `quantity` (integer): The amount by which to modify the quantity of the item in the cart.\n        \n\n**Example Request Body**:\n\n``` json\n{\n  \"cart_id\": 3,\n  \"action\": \"plus\",\n  \"quantity\": 1\n}\n\n ```\n\n#### Response\n\n- **Status Code**: 200 OK\n    \n- **Content-Type**: application/json\n    \n- **Response Body**:\n    \n    - `status` (boolean): Indicates whether the operation was successful.\n        \n    - `message` (string): A message providing additional information about the operation (if any).\n        \n    - `total` (integer): The total number of items in the cart after the update.\n        \n    - `data` (object): Contains details about the updated cart item:\n        \n        - `id` (integer): The unique identifier of the cart item.\n            \n        - `customer_id` (integer): The unique identifier of the customer.\n            \n        - `product_id` (integer): The unique identifier of the product.\n            \n        - `quantity` (integer): The updated quantity of the product in the cart.\n            \n        - `created_at` (string): Timestamp of when the cart item was created.\n            \n        - `updated_at` (string): Timestamp of when the cart item was last updated.\n            \n        - `product` (object): Details of the product associated with the cart item:\n            \n            - `id` (integer): The unique identifier of the product.\n                \n            - `name` (string): The name of the product.\n                \n            - `slug` (string): The URL-friendly identifier of the product.\n                \n            - `price` (string): The price of the product.\n                \n            - `description` (string): A brief description of the product.\n                \n            - `status` (integer): The status of the product (e.g., available, out of stock).\n                \n            - `created_at` (string): Timestamp of when the product was created.\n                \n            - `updated_at` (string): Timestamp of when the product was last updated.\n                \n\n**Example Response**:\n\n``` json\n{\n    \"status\": true,\n    \"message\": \"Cart item quantity updated successfully.\",\n    \"total\": 11200,\n    \"data\": {\n        \"id\": 10,\n        \"customer_id\": 10,\n        \"product_id\": 7,\n        \"quantity\": 2,\n        \"created_at\": \"2025-07-29T21:13:32.000000Z\",\n        \"updated_at\": \"2025-07-29T21:16:42.000000Z\",\n        \"product\": {\n            \"id\": 7,\n            \"name\": \"Monitor\",\n            \"slug\": \"monitor\",\n            \"price\": \"5600.00\",\n            \"quantity\": 7,\n            \"description\": \"A monitor is an electronic visual display, often part of a computer system, that presents text, images, and video\",\n            \"status\": 1,\n            \"created_at\": \"2025-07-24T20:36:39.000000Z\",\n            \"updated_at\": \"2025-07-29T19:55:55.000000Z\"\n        }\n    }\n}\n\n ```\n\n#### Notes\n\n- Ensure that the `cart_id` corresponds to an existing cart before making the request.\n    \n- The `action` parameter should be specified correctly to reflect the intended modification."
			},
			"response": []
		},
		{
			"name": "delete-cart",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{server_url}}/delete-cart?cart_id=7",
					"host": [
						"{{server_url}}"
					],
					"path": [
						"delete-cart"
					],
					"query": [
						{
							"key": "cart_id",
							"value": "7"
						}
					]
				},
				"description": "## DELETE Cart Endpoint\n\nThis endpoint is used to delete a specific shopping cart identified by its unique `cart_id`. It allows users to remove a cart from the system, which may be necessary when a user no longer wishes to keep the items in that cart.\n\n### Request\n\n- **Method**: DELETE\n    \n- **URL**: `{{server_url}}/delete-cart?cart_id={cart_id}`\n    \n\n#### Query Parameters\n\n- `cart_id` (required): The unique identifier of the cart you wish to delete. This should be passed as a query parameter in the URL.\n    \n\n### Response\n\nUpon successful deletion of the cart, the server will respond with a JSON object indicating the status of the operation.\n\n#### Response Format\n\n- **Status Code**: 200 OK\n    \n- **Content-Type**: application/json\n    \n- { \"status\": true, \"message\": \"\"}\n    \n- `status`: A boolean indicating whether the deletion was successful.\n    \n- `message`: A string providing additional information about the operation (may be empty).\n    \n\n### Example\n\n**Request**:\n\n```\nDELETE {{server_url}}/delete-cart?cart_id=2\n\n ```\n\n**Response**:\n\n``` json\n{\n  \"status\": true,\n  \"message\": \"Cart item deleted successfully\"\n}\n\n ```\n\nThis endpoint is essential for managing user carts effectively, allowing for easy removal of unwanted carts."
			},
			"response": []
		},
		{
			"name": "checkout",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{server_url}}/checkout",
					"host": [
						"{{server_url}}"
					],
					"path": [
						"checkout"
					]
				},
				"description": "## Checkout Endpoint\n\nThis endpoint is used to process a checkout operation, allowing users to finalize their orders and make payments. It is essential for completing the purchase of items in the shopping cart.\n\n### Request\n\n- **Method**: POST\n    \n- **URL**: `{{server_url}}/checkout`\n    \n\n### Response\n\nUpon successful checkout, the server will respond with a JSON object containing the status of the operation and order details\n\n**Response**:\n\n``` json\n{\n    \"status\": true,\n    \"message\": \"Order placed successfully.\",\n    \"data\": {\n        \"orderId\": 3,\n        \"customerId\": 10,\n        \"orderNumber\": \"ORD-68893A758A55A\",\n        \"totalAmount\": 11200,\n        \"status\": \"pending\",\n        \"shippingName\": \"irfan\",\n        \"shippingPhone\": \"8596858574\",\n        \"shippingAddress\": \"Vashi\",\n        \"createdAt\": \"2025-07-29 21:17:41\",\n        \"items\": [\n            {\n                \"orderItemId\": 3,\n                \"orderId\": 3,\n                \"productId\": 7,\n                \"quantity\": 2,\n                \"price\": \"5600.00\",\n                \"createdAt\": \"2025-07-29 21:17:41\",\n                \"product\": {\n                    \"productId\": 7,\n                    \"name\": \"Monitor\",\n                    \"slug\": \"monitor\",\n                    \"price\": \"5600.00\",\n                    \"quantity\": 5,\n                    \"description\": \"A monitor is an electronic visual display, often part of a computer system, that presents text, images, and video\",\n                    \"status\": 1\n                }\n            }\n        ]\n    }\n}\n\n ```\n\nThis endpoint is crucial for completing purchases and managing orders effectively."
			},
			"response": []
		},
		{
			"name": "pay-now",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{server_url}}/pay-now?order_id=3",
					"host": [
						"{{server_url}}"
					],
					"path": [
						"pay-now"
					],
					"query": [
						{
							"key": "order_id",
							"value": "3"
						}
					]
				},
				"description": "## Pay Now Endpoint\n\nThis endpoint is used to initiate a payment process for a specific order identified by its unique `order_id`. It allows users to proceed with the payment using the Razorpay payment gateway.\n\n### Request\n\n- **Method**: POST\n    \n- **URL**: `{{server_url}}/pay-now?order_id={order_id}`\n    \n\n#### Query Parameters\n\n- `order_id` (required): The unique identifier of the order for which the payment is being made. This should be passed as a query parameter in the URL.\n    \n\n### Response\n\nUpon successful initiation of the payment, the server will respond with a JSON object indicating the status of the operation.\n\n#### Response Format\n\n- **Status Code**: 200 OK\n    \n- **Content-Type**: application/json\n    \n- { \"status\": true, \"message\": \"\", \"data\": { \"order_id\": 0, \"razorpay_order_id\": \"\", \"razorpay_key\": \"\", \"amount\": 0, \"currency\": \"\", \"name\": \"\", \"email\": \"\", \"mobile\": \"\" }}\n    \n- `status`: A boolean indicating whether the payment initiation was successful.\n    \n- `message`: A string providing additional information about the operation (may be empty).\n    \n- `data`: An object containing details about the order and payment.\n    \n\n### Example\n\n**Response**:\n\n``` json\n{\n    \"status\": true,\n    \"message\": \"Razorpay order created.\",\n    \"data\": {\n        \"order_id\": 3,\n        \"razorpay_order_id\": \"order_Qz1w8zCaEoX4ZV\",\n        \"razorpay_key\": \"rzp_test_P5unVoUaHbdLV4\",\n        \"amount\": 1120000,\n        \"currency\": \"INR\",\n        \"name\": \"irfan\",\n        \"email\": \"irfan@gmail.com\",\n        \"mobile\": \"8596858574\"\n    }\n}\n\n ```\n\nThis endpoint is essential for processing payments securely and efficiently, ensuring that users can complete their transactions with ease."
			},
			"response": []
		},
		{
			"name": "verify-payment",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"order_id\": 3,\r\n    \"razorpay_order_id\": \"order_Qz1w8zCaEoX4ZV\",\r\n    \"razorpay_payment_id\": \"pay_z0bFIWX\",\r\n    \"razorpay_signature\": \"\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{server_url}}/verify-payment",
					"host": [
						"{{server_url}}"
					],
					"path": [
						"verify-payment"
					]
				},
				"description": "## Verify Payment Endpoint\n\nThis endpoint is used to verify a payment associated with a specific order. It allows users to confirm that a payment has been successfully processed.\n\n### Request\n\n- **Method**: POST\n    \n- **URL**: `{{server_url}}/verify-payment`\n    \n\n#### Request Body\n\nThe request body should be sent in JSON format and must include the following parameters:\n\n- `order_id` (required, type: integer): The unique identifier of the order for which the payment is being verified.\n    \n- `razorpay_order_id` (required, type: string): The unique identifier for the order generated by Razorpay.\n    \n- `razorpay_payment_id` (required, type: string): The unique identifier for the payment generated by Razorpay.\n    \n- `razorpay_signature` (required, type: string): The signature generated by Razorpay to ensure the integrity of the payment.\n    \n\n### Response\n\nUpon successful verification of the payment, the server will respond with a JSON object indicating the status of the operation.\n\n#### Response Format\n\n- **Status Code**: 200 OK\n    \n- **Content-Type**: application/json\n    \n- { \"status\": true, \"message\": \"\"}\n    \n- `status`: A boolean indicating whether the payment verification was successful.\n    \n- `message`: A string providing additional information about the operation (may be empty).\n    \n\n### Example\n\n**Request**:\n\n``` json\nPOST {{server_url}}/verify-payment\n{\n  \"order_id\": 3,\n  \"razorpay_order_id\": \"order_Qz1w8zCaEoX4ZV\",\n  \"razorpay_payment_id\": \"pay_z0bFIWX\",\n  \"razorpay_signature\": \"\"\n}\n\n ```\n\n**Response**:\n\n``` json\n{\n    \"status\": true,\n    \"message\": \"Payment verified and order marked as paid.\"\n}\n\n ```\n\nThis endpoint is essential for ensuring that payments are accurately verified, providing users with confidence in their transactions."
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "server_url",
			"value": "http://127.0.0.1:8000/api",
			"type": "string"
		},
		{
			"key": "token",
			"value": "Bearer",
			"type": "string"
		}
	]
}
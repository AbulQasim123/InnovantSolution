{
	"info": {
		"_postman_id": "49315f07-8a76-44bb-8e4c-5bb6db378d36",
		"name": "InovantSolutions",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24710956",
		"_collection_link": "https://blue-star-854291.postman.co/workspace/Team-Workspace~468866da-22e2-4eae-8c42-ea8176e5de06/collection/24710956-49315f07-8a76-44bb-8e4c-5bb6db378d36?action=share&source=collection_link&creator=24710956"
	},
	"item": [
		{
			"name": "add-customer",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Example5\",\r\n    \"email\": \"example5@gmail.com\",\r\n    \"phone\": 8552459685,\r\n    \"address\": \"Vashi\",\r\n    \"password\": \"password\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{server_url}}/add-customer",
					"host": [
						"{{server_url}}"
					],
					"path": [
						"add-customer"
					]
				},
				"description": "## Add to Cart API\n\nThis endpoint allows users to add a product to their shopping cart. It requires the product ID, quantity, and customer ID to successfully process the request.\n\n### Request\n\n**Method:** POST  \n**Endpoint:** `{{server_url}}/add-to-cart`\n\n#### Request Body (JSON)\n\n- `product_id` (integer, required): The unique identifier of the product to be added to the cart.\n    \n- `quantity` (integer, required): The number of units of the product to add to the cart.\n    \n- `customer_id` (integer, required): The unique identifier of the customer making the request.\n    \n\n**Example Request Body:**\n\n``` json\n{\n  \"product_id\": 5,\n  \"quantity\": 1,\n  \"customer_id\": 1\n}\n\n ```\n\n### Response\n\n**Status Code:** 201 Created  \n**Content-Type:** application/json\n\n#### Response Body\n\n- `status` (boolean): Indicates whether the operation was successful.\n    \n- `message` (string): A message providing additional information about the operation (may be empty).\n    \n- `data` (object): Contains details about the cart entry:\n    \n    - `customer_id` (integer): The ID of the customer associated with the cart entry.\n        \n    - `product_id` (integer): The ID of the product that was added.\n        \n    - `quantity` (integer): The quantity of the product added.\n        \n    - `updated_at` (string): Timestamp of when the cart entry was last updated.\n        \n    - `created_at` (string): Timestamp of when the cart entry was created.\n        \n    - `id` (integer): The unique identifier of the cart entry.\n        \n\n**Example Response:**\n\n``` json\n{\n  \"status\": true,\n  \"message\": \"\",\n  \"data\": {\n    \"customer_id\": 0,\n    \"product_id\": 0,\n    \"quantity\": 0,\n    \"updated_at\": \"\",\n    \"created_at\": \"\",\n    \"id\": 0\n  }\n}\n\n ```\n\n### Notes\n\n- Ensure that the `product_id` and `customer_id` correspond to valid entries in the system.\n    \n- The `quantity` must be a positive integer.\n    \n- The response will confirm the successful addition of the product to the cart."
			},
			"response": []
		},
		{
			"name": "get-customer",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{server_url}}/get-customer",
					"host": [
						"{{server_url}}"
					],
					"path": [
						"get-customer"
					]
				},
				"description": "## Add to Cart API\n\nThis endpoint allows users to add a product to their shopping cart. It requires the product ID, quantity, and customer ID to successfully process the request.\n\n### Request\n\n**Method:** POST  \n**Endpoint:** `{{server_url}}/add-to-cart`\n\n#### Request Body (JSON)\n\n- `product_id` (integer, required): The unique identifier of the product to be added to the cart.\n    \n- `quantity` (integer, required): The number of units of the product to add to the cart.\n    \n- `customer_id` (integer, required): The unique identifier of the customer making the request.\n    \n\n**Example Request Body:**\n\n``` json\n{\n  \"product_id\": 5,\n  \"quantity\": 1,\n  \"customer_id\": 1\n}\n\n ```\n\n### Response\n\n**Status Code:** 201 Created  \n**Content-Type:** application/json\n\n#### Response Body\n\n- `status` (boolean): Indicates whether the operation was successful.\n    \n- `message` (string): A message providing additional information about the operation (may be empty).\n    \n- `data` (object): Contains details about the cart entry:\n    \n    - `customer_id` (integer): The ID of the customer associated with the cart entry.\n        \n    - `product_id` (integer): The ID of the product that was added.\n        \n    - `quantity` (integer): The quantity of the product added.\n        \n    - `updated_at` (string): Timestamp of when the cart entry was last updated.\n        \n    - `created_at` (string): Timestamp of when the cart entry was created.\n        \n    - `id` (integer): The unique identifier of the cart entry.\n        \n\n**Example Response:**\n\n``` json\n{\n  \"status\": true,\n  \"message\": \"\",\n  \"data\": {\n    \"customer_id\": 0,\n    \"product_id\": 0,\n    \"quantity\": 0,\n    \"updated_at\": \"\",\n    \"created_at\": \"\",\n    \"id\": 0\n  }\n}\n\n ```\n\n### Notes\n\n- Ensure that the `product_id` and `customer_id` correspond to valid entries in the system.\n    \n- The `quantity` must be a positive integer.\n    \n- The response will confirm the successful addition of the product to the cart."
			},
			"response": []
		},
		{
			"name": "get-product",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{server_url}}/get-product",
					"host": [
						"{{server_url}}"
					],
					"path": [
						"get-product"
					]
				},
				"description": "## Add to Cart API\n\nThis endpoint allows users to add a product to their shopping cart. It requires the product ID, quantity, and customer ID to successfully process the request.\n\n### Request\n\n**Method:** POST  \n**Endpoint:** `{{server_url}}/add-to-cart`\n\n#### Request Body (JSON)\n\n- `product_id` (integer, required): The unique identifier of the product to be added to the cart.\n    \n- `quantity` (integer, required): The number of units of the product to add to the cart.\n    \n- `customer_id` (integer, required): The unique identifier of the customer making the request.\n    \n\n**Example Request Body:**\n\n``` json\n{\n  \"product_id\": 5,\n  \"quantity\": 1,\n  \"customer_id\": 1\n}\n\n ```\n\n### Response\n\n**Status Code:** 201 Created  \n**Content-Type:** application/json\n\n#### Response Body\n\n- `status` (boolean): Indicates whether the operation was successful.\n    \n- `message` (string): A message providing additional information about the operation (may be empty).\n    \n- `data` (object): Contains details about the cart entry:\n    \n    - `customer_id` (integer): The ID of the customer associated with the cart entry.\n        \n    - `product_id` (integer): The ID of the product that was added.\n        \n    - `quantity` (integer): The quantity of the product added.\n        \n    - `updated_at` (string): Timestamp of when the cart entry was last updated.\n        \n    - `created_at` (string): Timestamp of when the cart entry was created.\n        \n    - `id` (integer): The unique identifier of the cart entry.\n        \n\n**Example Response:**\n\n``` json\n{\n  \"status\": true,\n  \"message\": \"\",\n  \"data\": {\n    \"customer_id\": 0,\n    \"product_id\": 0,\n    \"quantity\": 0,\n    \"updated_at\": \"\",\n    \"created_at\": \"\",\n    \"id\": 0\n  }\n}\n\n ```\n\n### Notes\n\n- Ensure that the `product_id` and `customer_id` correspond to valid entries in the system.\n    \n- The `quantity` must be a positive integer.\n    \n- The response will confirm the successful addition of the product to the cart."
			},
			"response": []
		},
		{
			"name": "add-to-cart",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"product_id\": 7,\r\n    \"quantity\": 1,\r\n    \"customer_id\": 1\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{server_url}}/add-to-cart",
					"host": [
						"{{server_url}}"
					],
					"path": [
						"add-to-cart"
					]
				},
				"description": "## Get Product API\n\nThis endpoint allows users to retrieve details about a specific product based on the provided parameters. It requires the product ID, quantity, and customer ID to successfully process the request.\n\n### Request\n\n**Method:** GET  \n**Endpoint:** `{{server_url}}/get-product`\n\n#### Request Body (JSON)\n\n- `product_id` (integer, required): The unique identifier of the product to be retrieved.\n    \n- `quantity` (integer, required): The number of units of the product requested.\n    \n- `customer_id` (integer, required): The unique identifier of the customer making the request.\n    \n\n**Example Request Body:**\n\n``` json\n{\n  \"product_id\": 5,\n  \"quantity\": 1,\n  \"customer_id\": 1\n}\n\n ```\n\n### Response\n\n**Status Code:** 200 OK  \n**Content-Type:** application/json\n\n#### Response Body\n\n- `status` (boolean): Indicates whether the operation was successful.\n    \n- `message` (string): A message providing additional information about the operation (may be empty).\n    \n- `data` (array): Contains details about the product:\n    \n    - `id` (integer): The unique identifier of the product.\n        \n    - `name` (string): The name of the product.\n        \n    - `slug` (string): A URL-friendly version of the product name.\n        \n    - `price` (string): The price of the product.\n        \n    - `description` (string): A description of the product.\n        \n    - `status` (integer): The current status of the product.\n        \n    - `images` (array): A list of images associated with the product:\n        \n        - `id` (integer): The unique identifier of the image.\n            \n        - `product_id` (integer): The ID of the product associated with the image.\n            \n        - `images` (string): The URL or path of the image.\n            \n\n**Example Response:**\n\n``` json\n{\n  \"status\": true,\n  \"message\": \"\",\n  \"data\": [\n    {\n      \"id\": 0,\n      \"name\": \"\",\n      \"slug\": \"\",\n      \"price\": \"\",\n      \"description\": \"\",\n      \"status\": 0,\n      \"images\": [\n        {\n          \"id\": 0,\n          \"product_id\": 0,\n          \"images\": \"\"\n        }\n      ]\n    }\n  ]\n}\n\n ```\n\n### Notes\n\n- Ensure that the `product_id` and `customer_id` correspond to valid entries in the system.\n    \n- The `quantity` must be a positive integer.\n    \n- The response will confirm the successful retrieval of the product details."
			},
			"response": []
		},
		{
			"name": "get-cart",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{server_url}}/get-cart?customer_id=1",
					"host": [
						"{{server_url}}"
					],
					"path": [
						"get-cart"
					],
					"query": [
						{
							"key": "customer_id",
							"value": "1"
						}
					]
				},
				"description": "### Get Cart\n\nThis endpoint retrieves the shopping cart details for a specified customer.\n\n#### Request\n\n- **Method:** GET\n    \n- **Endpoint:** `{{server_url}}/get-cart`\n    \n- **Query Parameters:**\n    \n    - `customer_id` (required): The unique identifier for the customer whose cart is being requested.\n        \n\n#### Response\n\nOn a successful request, the server responds with a JSON object containing the following fields:\n\n- **status** (boolean): Indicates if the request was successful.\n    \n- **total** (integer): The total number of items in the cart.\n    \n- **data** (array): An array of cart items, where each item contains:\n    \n    - **id** (integer): The unique identifier for the cart item.\n        \n    - **customer_id** (integer): The unique identifier for the customer.\n        \n    - **product_id** (integer): The unique identifier for the product.\n        \n    - **quantity** (integer): The quantity of the product in the cart.\n        \n    - **product** (object): An object containing details about the product, including:\n        \n        - **id** (integer): The unique identifier for the product.\n            \n        - **name** (string): The name of the product.\n            \n        - **slug** (string): A URL-friendly version of the product name.\n            \n        - **price** (string): The price of the product.\n            \n        - **description** (string): A brief description of the product.\n            \n        - **status** (integer): The status of the product (e.g., available, out of stock).\n            \n        - **images** (array): An array of image objects related to the product, where each image object contains:\n            \n            - **id** (integer): The unique identifier for the image.\n                \n            - **product_id** (integer): The identifier for the associated product.\n                \n            - **images** (string): The URL or path to the image.\n                \n\n#### Example Response\n\n``` json\n{\n  \"status\": true,\n  \"total\": 0,\n  \"data\": [\n    {\n      \"id\": 0,\n      \"customer_id\": 0,\n      \"product_id\": 0,\n      \"quantity\": 0,\n      \"product\": {\n        \"id\": 0,\n        \"name\": \"\",\n        \"slug\": \"\",\n        \"price\": \"\",\n        \"description\": \"\",\n        \"status\": 0,\n        \"images\": [\n          {\n            \"id\": 0,\n            \"product_id\": 0,\n            \"images\": \"\"\n          }\n        ]\n      }\n    }\n  ]\n}\n\n ```\n\nThis response structure allows clients to easily access the cart details and product information for further processing or display."
			},
			"response": []
		},
		{
			"name": "update-cart",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"cart_id\": 5,\r\n    \"action\": \"plus\", // minus\r\n    \"quantity\": 1\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{server_url}}/update-cart",
					"host": [
						"{{server_url}}"
					],
					"path": [
						"update-cart"
					]
				},
				"description": "### Update Cart Endpoint\n\nThis endpoint allows users to update the quantity of a specific item in their shopping cart.\n\n#### Request\n\n- **Method**: POST\n    \n- **URL**: `{{server_url}}/update-cart`\n    \n- **Request Body** (JSON):\n    \n    - `cart_id` (integer): The unique identifier of the cart to be updated.\n        \n    - `action` (string): The action to perform on the cart item. In this case, it indicates whether to increase or decrease the quantity (e.g., \"plus\" for adding).\n        \n    - `quantity` (integer): The amount by which to modify the quantity of the item in the cart.\n        \n\n**Example Request Body**:\n\n``` json\n{\n  \"cart_id\": 3,\n  \"action\": \"plus\",\n  \"quantity\": 1\n}\n\n ```\n\n#### Response\n\n- **Status Code**: 200 OK\n    \n- **Content-Type**: application/json\n    \n- **Response Body**:\n    \n    - `status` (boolean): Indicates whether the operation was successful.\n        \n    - `message` (string): A message providing additional information about the operation (if any).\n        \n    - `total` (integer): The total number of items in the cart after the update.\n        \n    - `data` (object): Contains details about the updated cart item:\n        \n        - `id` (integer): The unique identifier of the cart item.\n            \n        - `customer_id` (integer): The unique identifier of the customer.\n            \n        - `product_id` (integer): The unique identifier of the product.\n            \n        - `quantity` (integer): The updated quantity of the product in the cart.\n            \n        - `created_at` (string): Timestamp of when the cart item was created.\n            \n        - `updated_at` (string): Timestamp of when the cart item was last updated.\n            \n        - `product` (object): Details of the product associated with the cart item:\n            \n            - `id` (integer): The unique identifier of the product.\n                \n            - `name` (string): The name of the product.\n                \n            - `slug` (string): The URL-friendly identifier of the product.\n                \n            - `price` (string): The price of the product.\n                \n            - `description` (string): A brief description of the product.\n                \n            - `status` (integer): The status of the product (e.g., available, out of stock).\n                \n            - `created_at` (string): Timestamp of when the product was created.\n                \n            - `updated_at` (string): Timestamp of when the product was last updated.\n                \n\n**Example Response**:\n\n``` json\n{\n  \"status\": true,\n  \"message\": \"\",\n  \"total\": 0,\n  \"data\": {\n    \"id\": 0,\n    \"customer_id\": 0,\n    \"product_id\": 0,\n    \"quantity\": 0,\n    \"created_at\": \"\",\n    \"updated_at\": \"\",\n    \"product\": {\n      \"id\": 0,\n      \"name\": \"\",\n      \"slug\": \"\",\n      \"price\": \"\",\n      \"description\": \"\",\n      \"status\": 0,\n      \"created_at\": \"\",\n      \"updated_at\": \"\"\n    }\n  }\n}\n\n ```\n\n#### Notes\n\n- Ensure that the `cart_id` corresponds to an existing cart before making the request.\n    \n- The `action` parameter should be specified correctly to reflect the intended modification."
			},
			"response": []
		},
		{
			"name": "delete-cart",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{server_url}}/delete-cart?cart_id=2",
					"host": [
						"{{server_url}}"
					],
					"path": [
						"delete-cart"
					],
					"query": [
						{
							"key": "cart_id",
							"value": "2"
						}
					]
				},
				"description": "## DELETE Cart Endpoint\n\nThis endpoint is used to delete a specific shopping cart identified by its unique `cart_id`. It allows users to remove a cart from the system, which may be necessary when a user no longer wishes to keep the items in that cart.\n\n### Request\n\n- **Method**: DELETE\n    \n- **URL**: `{{server_url}}/delete-cart?cart_id={cart_id}`\n    \n\n#### Query Parameters\n\n- `cart_id` (required): The unique identifier of the cart you wish to delete. This should be passed as a query parameter in the URL.\n    \n\n### Response\n\nUpon successful deletion of the cart, the server will respond with a JSON object indicating the status of the operation.\n\n#### Response Format\n\n- **Status Code**: 200 OK\n    \n- **Content-Type**: application/json\n    \n- { \"status\": true, \"message\": \"\"}\n    \n- `status`: A boolean indicating whether the deletion was successful.\n    \n- `message`: A string providing additional information about the operation (may be empty).\n    \n\n### Example\n\n**Request**:\n\n```\nDELETE {{server_url}}/delete-cart?cart_id=2\n\n ```\n\n**Response**:\n\n``` json\n{\n  \"status\": true,\n  \"message\": \"\"\n}\n\n ```\n\nThis endpoint is essential for managing user carts effectively, allowing for easy removal of unwanted carts."
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "server_url",
			"value": "http://127.0.0.1:8000/api",
			"type": "string"
		}
	]
}